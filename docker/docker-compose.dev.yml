services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=elastic123
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${DEV_DATA_PATH:-../data}/elasticsearch:/usr/share/elasticsearch/data
      - ./setup-users.sh:/setup-users.sh:rw
      - es_tokens:/tokens
    ports:
      - "9200:9200"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s -u elastic:elastic123 http://localhost:9200 >/dev/null || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      /bin/bash -c "
        chmod +x /setup-users.sh &&
        /setup-users.sh &
        /usr/local/bin/docker-entrypoint.sh elasticsearch
      "

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=/tokens/kibana_token
      - XPACK_SECURITY_ENCRYPTIONKEY=something_at_least_32_characters
    volumes:
      - ./setup_kibana.sh:/usr/local/bin/setup_kibana.sh:rw
      - ../kibana/dashboards:/dashboards:ro
      - es_tokens:/tokens
    ports:
      - "5601:5601"
    networks:
      - elastic
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      interval: 10s
      timeout: 10s
      retries: 5
    command: >
      /bin/bash -c "
        while [ ! -f /tokens/kibana_token ]; do
          echo 'Waiting for token file...'
          sleep 5
        done &&
        TOKEN=$$(cat /tokens/kibana_token) &&
        export ELASTICSEARCH_SERVICEACCOUNTTOKEN=$$TOKEN &&
        /usr/local/bin/kibana-docker
      "

networks:
  elastic:
    driver: bridge

volumes:
  es_tokens:
